%!
%%Title: tools.packages.html
%%DocumentFonts: NewCenturySchlbk-Roman NewCenturySchlbk-Bold NewCenturySchlbk-Italic NewCenturySchlbk-BoldItalic Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Creator: html2ps 0.2 alpha, written by Jan Karrman, jan@tdb.uu.se
%%EndComments
save
1000 dict begin
/colorimage where {pop} {
 /colorimage {
  pop pop /Bp exch def /Gp exch def /Rp exch def
  {/Re Rp def /Gr Gp def /Bl Bp def
  0 1 Re length 1 sub {
   /i exch def Gr i Re i get 0.299 mul Gr i get 0.587 mul add
   Bl i get 0.114 mul add cvi put
  } for Gr} image
 } def
} ifelse
/D {def} def
/t {true} D
/f {false} D
/RF {/NewCenturySchlbk-Roman} D
/BF {/NewCenturySchlbk-Bold} D
/IF {/NewCenturySchlbk-Italic} D
/IB {/NewCenturySchlbk-BoldItalic} D
/FF {/Courier} D
/FB {/Courier-Bold} D
/FI {/Courier-Oblique} D
/FT {/Courier-BoldOblique} D
/F 1 D
/W {453 F div} D
/LE {651 F div} D
/PS 1 D
/HS [19 17 15 13 12 11] D
/HT [2 2 2 2 2 2] D
/MK 7 D
/NO t D
/ZL f D
/ZR f D
/Zl () D
/Zr () D
/TU f D
/AU t D
/SN 0 D
/LA {TU PM 1 eq and {W 56 F div add 0 translate}
 {70 705 translate F dup scale} ie} D
/FP 0 D
/SG [0.80000000000000004441 1 1] D
statusdict /setduplexmode known
 {statusdict begin false setduplexmode end} if
%-- End of variable part --
/ie {ifelse} D
/E {exch} D
/M {moveto} D
/S {show} D
/R {rmoveto} D
/L {lineto} D
/RL {rlineto} D
/CP {currentpoint} D
/SW {stringwidth} D
/GI {getinterval} D
/PI {putinterval} D
/U {gsave CP currentfont /FontInfo get /UnderlinePosition get
 0 E currentfont /FontMatrix get dtransform E pop add newpath M
 dup SW RL stroke grestore} D
/B {-10 3 R gsave CP newpath 2.5 0 360 arc closepath
 UI 2 mod 0 eq {stroke} {fill} ie grestore 10 -3 R} D
/NP {/PM PN SN sub 2 mod D PN SN gt TU not PM 0 eq or and {showpage} if
 0.6 setlinewidth LA /BP t D /PN PN 1 add D
 /OF currentfont D RF findfont 10 scalefont setfont
 /YO {LE neg 60 F div dup 40 gt {pop 40} if sub} D
 NO {W 2 div YO M PN ST cvs S} if
 ZL {0 YO M Zl S} if
 ZR {W YO M Zr dup stringwidth pop neg 0 R S} if
 OF setfont
 XO SZ SL get neg M /CI 0 D} D
/SF {/CS E D CS SZ SL 3 2 roll put /YI CS -1.2 mul D dup ST cvs C1 E join
 ( NF ) join /C1 E D NF /BW ( ) SW pop D} D
/NF {FL E get findfont CS scalefont setfont} D
/FS {CF MK PF {1 or} if and or /CF E D FR SL CF put CF E SF} D
/FL [RF FF BF FB IF FI IB FT] D
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ie } forall
/Encoding ISOLatin1Encoding D
currentdict end definefont
} D
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/backslash/parenleft/parenright/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] D
FL {reencodeISO D} forall

/BS {/PC E D /TX E D /fin f D /CW 0 D /LK 0 D /SC 0 D
 /RT TX D {RT ( ) search {/NW E D pop /RT E D /WH NW SW pop D CW WH add LL gt
 {TX SC LK SC sub GI PC /SC LK D /CW WH BW add D}
 {/CW CW WH add BW add D} ie
 /LK LK NW length add 1 add D} {pop exit} ie} loop
 /fin t D /LC TX length D /WH RT SW pop D CW WH add LL gt
 {TX SC LK SC sub GI PC NL RT dup () ne {PC} {pop} ie}
 {TX SC LC SC sub GI PC} ie} D

/BT {RS dup dup () ne E ( ) ne and
 {/LS LL D /LL W L1 sub XO sub D {/CI 0 D SH /BP f D fin not {NL} if
  /HM t D /LL LS D} BS} {BG {pop} {SH /BP f D} ie} ie} D
/BL {HM not {CP E pop XO E M} if} D
/NL {BL W XO sub L1 sub TB {BW add} if AT mul 2 div YA neg dup 0 lt {3 sub} if
 R F0 CF ne {F0 NF} if C1 cvx exec /C1 () D /L1 0 D /F0 CF D
 BP not {0 YB NN neg R} if /YA 0 D /YB 0 D CP /YC E D pop XO YC M YC LE neg gt
 {YI CI sub dup 0 lt BP not and {dup 0 E R CI add /CI E D} {pop} ie}
 {NP} ie /T t D} D
/RS {/TM E D /CN 0 D TM
 {dup 9 eq E 10 eq or {TM CN ( ) PI} if
  /CN CN 1 add D} forall /CN 0 D /BK HM EN and {0} {1} ie D TM
 {dup 32 ne {TM CN 3 2 roll put /CN CN 1 add D /BK 0 D}
 {pop BK 0 eq {TM CN 32 put /CN CN 1 add D} if /BK 1 D} ie}
  forall TM 0 CN GI dup dup () ne E ( ) ne and
  {dup CN 1 sub get 32 eq {/EN f D} {/EN t D} ie} if} D
/join {2 copy length E length add string dup 4 2 roll 2 index 0 3 index
 PI E length E PI} bind D
/EG {dup 0 E dup () eq {E pop} {E get} ifelse 10 ne {(\n) E join} if} D
/WR {PB {EG /PB f D} if PP {EG /PP f D} if (\n) search
 {dup () ne BP not or {TR /CI 0 D /NC 0 D NL pop WR}{pop pop WR} ie} {TR} ie} D
/TR {(\t) search {dup length /NC E NC add D SH MS 0 8 NC 8 mod sub dup
 /NC E NC add D GI SH pop TR} {dup length /NC E NC add D SH} ie
 /BP f D} D
/SH {CP E pop LE neg lt {NP} if dup SW pop L1 add /L1 E D
 C1 (\() join T not {( ) join} if E join (\)) join
 AU AF and UF or {( U ) join} if ( S ) join /C1 E D /T t D /TB EN not D} D
/BG {CP pop XO sub abs 0.01 lt} D
/ON {AR AI NN get 1 add dup AR AI 3 -1 roll put ST cvs length dup ST E (. ) PI
 ST 0 3 -1 roll 2 add GI dup SW pop neg 0 R S} D
/SP {YI E /YI E D NL /YI E D} D
/BR {BN} D
/BN {PF {WR} {BT NL} ie /HM f D} D
/AB {CH E 0 E put CH join WB} D
/NN {dup 0 lt {pop 0} if} D
/H  {1 sub /HL E D E BN /AT E D CP E pop LE neg WW add lt {NP} if
 BH SP /SL SL 1 add D HS HL get HT HL get FS} D
/EH {BN /AT 0 D AH SP /SL SL 1 sub NN D /CF 0 D SZ SL get FR SL get FS} D
/P  {E PF {WR /PP t D} {BN AE not {AH SP} if} ie /AT E D} D
/HR {BN 0 CP E pop M gsave PF {0 YI R} if W 0 RL stroke grestore /CI 0 D
 /BP f D NL} D
/AD {BN /AE t D AH SP 4 11 SF} D
/DA {BN /AE f D AH SP 0 11 SF} D
/PR {BN /AT 0 D /CF 0 D 9 PS mul 1 FS /PF t D /PB t D /NC 0 D} D
/PW {pop PR} D
/RP {PF {dup () ne {dup dup length 1 sub get 10 ne {(\n) join} if} if
 WR AH SP /CF 0 D 11 0 FS /PF f D} {BT} ie} D
/SI {/XO AI LG add NN IN mul BC NN BI mul add D /LL W XO sub D} D
/DT {BN /LG LG 1 sub D SI /LG LG 1 add D BL} D
/DD {BN SI BL} D
/DL {BN XO 0 eq {AH SP} if /LG LG 1 add D BL} D
/LD {BN LG 0 gt {/LG LG 1 sub D} if SI XO 0 eq {AH SP} if BL} D
/UL {BN XO 0 eq {AH SP} {NL} ie NR AI NN 0 put /UI UI 1 add D
 /AI AI 1 add D SI BL} D
/LU {BN /UI UI 1 sub D /AI AI 1 sub D SI XO 0 eq {AH SP} {NL} ie BL} D
/OL {BN XO 0 eq {AH SP} {NL} ie NR AI NN 1 put /AI AI 1 add D SI BL} D
/LO {BN AR AI NN 0 put /AI AI 1 sub D SI XO 0 eq {AH SP} {NL} ie BL} D
/LI {BN /BP f D /CI 0 D CP E pop LE neg lt {NP} if
 /C1 C1 NR AI 1 sub NN get 1 eq {( ON )} {( B )} ie join D BL} D
/BQ {BN AH SP /BC BC 1 add D SI BL} D
/QB {BN AH SP /BC BC 1 sub D SI BL} D
/WB {PF {WR} {BT} ie} D
/A  {WB /AF t D} D
/EA {WB /AF f D} D
/SS {SZ SL get /SL SL 1 add D} D
/I  {WB SS 4 FS} D
/BD {WB SS 2 FS} D
/TT {WB SS 1 FS} D
/KB {WB SS /CF 0 D 3 FS} D
/CT {WB SS /CF 0 D 4 FS} D
/SM {WB SS /CF 0 D 1 FS} D
/ES {WB /SL SL 1 sub NN D /CF 0 D SZ SL get FR SL get FS} D
/UN {WB /UF t D} D
/NU {WB /UF f D} D
/SB {0 1 NI {/N E D /K WS N get D /NY AY N get FC N get mul D /BV NY array D
 0 1 NY 1 sub {/TM K string D currentfile TM readhexstring pop pop BV E TM put}
 for BM N BV put} for} D
/colorimage where {pop} {
 /colorimage {
  pop pop /Bp E D /Gp E D /Rp E D
  {/Re Rp D /Gr Gp D /Bl Bp D
  0 1 Re length 1 sub {
   /i E D Gr i Re i get 0.299 mul Gr i get 0.587 mul add Bl i get 0.114 mul add
   cvi put
  } for Gr} image
 } D
} ie
/IP {BV N get /N N 1 add D} D
/II {/K E D /TY E D /XW AX K get D /YW AY K get D /IS SG IT K get get D
 /XS XW IS mul D /YS YW IS mul D YS CS sub TY 2 eq {/MB E D /MA 0 D}
 {TY 2 mod 1 eq {2 div /MA E 2 sub D /MB MA 4 add D}{/MA E D /MB 0 D} ie} ie} D
/IM {II /ty TY D /xs XS D /ys YS D /ya YA D /yb YB D /ma MA D /mb MB D /k K D
 /CI 0 D WB L1 xs add dup /L1 E D XO add W gt
 {NL /YA ma D /YB mb D /YS ys D /L1 xs D}
 {ma YA gt {/YA ma D} if mb YB gt {/YB mb D} if} ie CP E pop YS sub LE neg lt
 {NP /YA ma D /YB mb D /L1 xs D} if /BP f D ty ST cvs ( ) join k ST cvs join
 C1 E join ( DI ) join FP 2 eq FP 1 eq AF and or {( FM ) join} if /C1 E D
 /HM t D /EN f D /T TY 3 eq D} D
/DI {II /YN YW neg D /HM t D /CI 0 D /K2 IX K get D gsave CP MB sub translate
 K2 0 ge {/DP AZ K2 get D /BV BM K2 get D XS YS scale /N 0 D XW YW DP
 [XW 0 0 YN 0 YW] {IP} FC K2 get 1 eq {image} {{IP} {IP} t 3 colorimage} ie}
 {PV K2 neg 1 sub get exec} ie grestore XS 0 R} D
/FM {gsave CP MB sub translate XS neg 0 M 0 YS RL XS 0 RL 0 YS neg RL XS neg
 0 RL stroke grestore} D
/BH -35 D
/AH -28 D
/LL W D
/XO 0 D
/YI 0 D
/CI 0 D
/LG 0 D
/AI 0 D
/UI 0 D
/IN 30 D
/BI 12 D
/WW 50 D
/AR [0 0 0 0 0 0 0 0 0 0] D
/NR [0 0 0 0 0 0 0 0 0 0] D
/FR [0 0 0 0 0 0 0 0 0 0] D
/SZ [0 0 0 0 0 0 0 0 0 0] D
/SL 0 D
/CF 0 D
/BC 0 D
/YA 0 D
/YB 0 D
/F0 0 D
/N 0 D
/AT 0 D
/C1 () D
/C2 () D
/L1 0 D
/L2 0 D
/PN SN D
/MS (        ) D
/CH 1 string D
/ST 6 string D
/HM f D
/PF f D
/EN f D
/TB f D
/UF f D
/PP f D
/AE f D
/AF f D
/BP t D
/T t D
/AX [26 26 26 26 32 20] D
/AY [26 26 26 26 32 20] D
/IX [0 1 2 3 4 5] D
/IT [0 0 0 0 0 0] D
/AZ [8 8 8 8 8 8] D
/WS [26 26 26 26 32 20] D
/FC [3 3 3 3 3 3] D
/NI 5 D
/BM 6 array D
%%EndProlog
SB
a5a5a5a59c9c9c9c9c9c9c94949494948c8c8c8c8c8c84848487c6c6c6c6
bdbdbdbdbdb5b5b5b5b5adadadadada5a5a5a5a59c9ae7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6a5a5a59c9c9c9c9c9c9c9494
9494948c948c8c8c8c8484848484c6c6c6bdbdbdbdbdb5b5b5b5b5adadad
adada5a5a5a5a59c9c9ce7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7a5a59c9c9c9c9c9c9c9494949494948c8c8f8c8c8c848487
8487c6c6bdbdbdbdbdb5b5b5b5b5adadadada5a8ada5a5a5a59a9c9ae7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d9e7e7e7e7e7d6e7d6a59c9c9c9c9c
9c9c949494948f9494949c94948c84848484847bc6bdbdbdbdb5bdb5b5b5
b5b5a8adadadb5adada5a5a59c9c9c9ce7e7e7e7e7e7e7e7e7e7e7e7d9e7
e7e7e7e7e7e7e7e7e7e7e7e79c9c9c9c9c9c9c8f9cf7f1f1f7f7f7f7f7f7
e684848784877b7bbdbdbdbdbdb5b5a8bdfcf2f2fcfcfcfcfcfceea59c9a
9c9a9c93e7e7e7e7e7e7e7d9e7fff7f7ffffffffffffffe7e7d6e7d6e7da
9c9c9c9c9c948f8ff1f7d6f7f7f7f7f7f7f7c48484847b847b7bbdbdbdbd
b5b5a8a8f2fcd6fcfcfcfcfcfcfcd29c9c9c9c9c939ce7e7e7e7e7e7d9d9
f7ffdefffffffffffffff4e7e7e7e7e7dae79c9c9c9c8f8f87f7f7e6b1f7
f7f7f7f7f7f79c8784877b7b7b7bbdbdbdb5a8a89afcfceeb9fcfcfcfcfc
fcfcb59a9c9a9c939c93e7e7e7e7d9d9d6ffffffd9ffffffffffffffe7d6
e7d6e7dae7da9c9c9c948f72f1c46f4a87f7f7f7f7f7f7f78c84847b877b
7b7bbdbdb5b5a88cf2d281609afcfcfcfcfcfcfca59c9c9c9a949394e7e7
e7e7d9d3f7f4bdadd6ffffffffffffffe7e7e7e7d6e7dae79c9c9c8f6f8f
ce5f4a8fd6f7f7f7f7f7f7f7877b877b7b7b7b73b5b5b5a8819ad673609a
d6fcfcfcfcfcfcfc9a9c9a9c9494948ce7e7e7d9bdc0debdadc0deffffff
ffffffffd6e7d6e7e7e7e7de9c9c8f7b5e8fd28fd6f7f7f7f7f7f7a0f7e6
84847b7b7b7b737bb5b5a893749ae19ad6fcfcfcfcfcfcaefcee9c9c9c94
93948c8ce7e7d9dab1c0fbc0deffffffffffffd6ffffe7e7e7e7dae7dee7
9c948f7e4a8ff7f7f7f7f7f7f7bb5e0af7f77b7b7b7b7b7b7b73b5b5a88b
609afcfcfcfcfcfcfcc67424fcfc939c939494938c8ce7e7d9bcadc0ffff
ffffffffffdcb179ffffdae7dae7e7dae7de94948f6f4a9df7f7f7f7f1a0
5e0a0a0af7f77b7b7b7b737b7373b5b5a88160a7fcfcfcfcf2ae74242424
fcfc949394938c8c8c8ce7e7d9bdadc0fffffffff7d6b1797979ffffe7da
e7dae7e7dede949487634a8ff7f7f1b15e0a0a0a0a0a0a0a0a0a0a0a7b73
7373b5ad9a7b609afcfcf2b9742424242424242424242424948c8c8ce7e7
d6c6adc0fffff7d9b17979797979797979797979e7dedede948c87634a8f
f7c95e0a0a0a0a0a0a0a0a0a0a0a0a0a73737372adad9a7b609afccd7424
2424242424242424242424248c8c8c84e7e7d6bdadc0ffdbb17979797979
7979797979797979e7dedede948c87634a8ff7e6c4a0630a0a0a0a0a0a0a
0a0a0a0a7373736badad9a7b609afceed2ae7b2424242424242424242424
8c8c8484e7e7d6bdadc0fffff4d6bd7979797979797979797979e7ded6d6
948c87634a7ef7e6c4a79c8f5e0a0a0aa3a7635f637372736b6badad9a7b
608bfceed2bcb5a874242424b8bc7b737b8c84848484e7e7d6bdadbcffff
f4e7e7d9b1797979f7e7c6bdcededed6d6d68c8c87634a6ff7f7f7e6c4a7
a7b15e0ac4bb63636b7373736b6badad9a7b6081fcfcfceed2bcbcb97424
d2c67b7b848484848484e7e7d6c6adbdfffffffff4e7e7d9b179f4dcc6c6
d6d6d6d6d6ce8c8f876f4a5ef7f7f7f7f7d2c4a7a7b1f7ed876b736b736b
6b6bada89a816074fcfcfcfcfce1d2bcbcb9fcf89a8484848484847be7d9
d6bdadb1fffffffffffbf4e7e7d9ffffd6d6d6d6d6d6cece8c8c876b4a4a
f7f7f7f7f7f7e6c4a7bbf7f7a7726b726b6b6b6ba5a59a84605afcfcfcfc
fcfceed2bcc6fcfcbc8c848c84847b7be7e7d6cead96fffffffffffffff4
e7dcffffe7d3d6d3d6cecece8c8f876b4a37f1f7f7f7f7f7f7f7e6e6f7f7
e6736b6b6b6b6b63a5a89a84604ff2fcfcfcfcfcfcfceeeefcfcee848484
847b7b7be7d9d6cead9ff7ffffffffffffffffffffffffd6d6d6cececec6
8c8484724a378fdef7f7f7f7f7f7f7f7f7f7f7876b6b6b6b6363a5a59c8c
604f9adefcfcfcfcfcfcfcfcfcfcfc9a8484847b7b7be7e7e7d3ad9fc0de
ffffffffffffffffffffffd6d6cececec6c68487847250374a374a4a5e6f
7e7e7e7e83878f736b6b6b63635ea59a9c8c684f5a4f5a6074818b8b8b8b
959aa88c847b7b7b7b73e7d6e7d3b89f969f96adb1bdbcbcbcbcc2d6d9de
cececec6c6c68484877b635e4a4a374a4a373737374a4a636b6b6b6b6363
5e63a5a59a937b7460604f605a4f4f4f4f60607b7b84847b7b7b737be7e7
d6dac6b1adad9fad969f9f9f9fadadc6cecececec6c6c6bd8484847b7b6b
6b63635f505f5e505e505f636b6b636363635f5f9c9c9c939384847b7b73
687374687468737b847b7b7b7b7b7373e7e7e7dadad6cec6c6bdb8bdb1b8
b1b8bdc6cececec6c6c6bdbd8487847b7b7b7b73726b6b6b6b6b636b636b
6b6b6363635f5f5f9c9a9c939c93938c8c84848484847b847b7b7b7b7b7b
7b737373e7d6e7dae7dadaded3d6d6d6d6cececececececec6c6c6bdbdbd
84847b7b7b7b7b7373737373736b736b6b6b6b6363635f5f5f5e9c9c939c
9394938c8c8c8c8c84848484847b7b7b7b7b73737374e7e7dae7dae7dade
dedededed6d6d6cecececec6c6bdbdbdbdb1
a5a5a5a59c9c9c9c9c9c9c94949494948c8c8c8c8c8c84848487c6c6c6c6
bdbdbdbdbdb5b5b5b5b5adadadadada5a5a5a5a59c9ae7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6a5a5a59c9c9c9c9c9c9c9494
9494948c948c8c8c8c8484848484c6c6c6bdbdbdbdbdb5b5b5b5b5adadad
adada5a5a5a5a59c9c9ce7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7a5a59c9c9c9c9c9c9c9494949494948c8c8c8c8c8c848487
8487c6c6bdbdbdbdbdbdb5b5b5b5adadadadada5a5a5a5a5a59a9c9ae7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6e7d6a59c9c9c9c9c
9ca79ca79c94948f94948f8c8c8c84848484847bc6bdbdbdbdb5bdbcbdbc
b5b5ada8adada8a5a5a5a5a59c9c9c9ce7e7e7e7e7e7e7e7e7e7e7e7e7d9
e7e7d9e7e7e7e7e7e7e7e7e79c9c9c9c9c9c9ce6f7f7f7f7f7f7f1f1f78f
8784848784877b7bbdbdbdbdbdb5b5eefcfcfcfcfcfcf2f2fca89aa59c9a
9c9a9c93e7e7e7e7e7e7e7fffffffffffffff7f7ffd9d6e7e7d6e7d6e7da
9c9c9c9c9c9c94c4f7f7f7f7f7f7f7d6f7ed877b877b7b847b7bbdbdbdbd
b5b5b5d2fcfcfcfcfcfcfcd6fcf89a939a9c9c9c939ce7e7e7e7e7e7e7f4
ffffffffffffffdeffffd6dad6e7e7e7dae79c9c9c9c9c9494a5f7f7f7f7
f7f7f7bbe6f7f1727b7b7b7b7b7bbdbdbdb5b5b5b5c6fcfcfcfcfcfcfcc6
eefcf28c93939c939c93e7e7e7e7e7e7e7e7ffffffffffffffdcfffff7d3
dadae7dae7da9c9c9c9c9494949cf7f7f7f7f7f7f7875e7ec4f16b72877b
7b7bbdbdb5b5b5b5b5b5fcfcfcfcfcfcfc9a748bd2f2848c9a949394e7e7
e7e7e7e7e7e7ffffffffffffffd6b1bcf4f7ced3d6e7dae79c9c9c949494
948cf7f7f7f7f7f7f7d6a0504ad68763737b7b73b5b5b5b5b5b5adadfcfc
fcfcfcfcfcd6ae6860d69a7b8c94948ce7e7e7e7e7e7e7e7ffffffffffff
ffded6b8added6c6dee7e7de9c9c94949494948cf1f7a0f7f7f7f7f7f7e6
bbd283506b73737bb5b5b5b5b5adadadf2fcaefcfcfcfcfcfceec6e19568
848c8c8ce7e7e7e7e7e7e7e7f7ffd6ffffffffffffffdcfbc2b8cededee7
9c9494949494948cf7f70a5ebbf7f7f7f7f7f7f78f4a63737373b5b5b5b5
adadadadfcfc2474c6fcfcfcfcfcfcfc9a607b8c8c8ce7e7e7e7e7e7e7e7
ffff79b1dcffffffffffffffc0adc6dedede94949494948c8c8cf7f70a0a
0a5ea0f1f7f7f7f79d4a5e727373b5b5b5adadadadadfcfc24242474aef2
fcfcfcfca760738c8c8ce7e7e7e7e7e7e7e7ffff797979b1d6f7ffffffff
c0adc6d3dede949494940a0a0a0a0a0a0a0a0a0a0a5eb1f1f7f78f375f6b
7373b5b5adad242424242424242424242474b9f2fcfc9a4f73848c8ce7e7
e7e77979797979797979797979b1d9f7ffffc09fbdd6dede9494948c0a0a
0a0a0a0a0a0a0a0a0a0a0a5ec9f78f4a5f6b7372adadadad242424242424
2424242424242474cdfc9a6073848c84e7e7e7e779797979797979797979
797979b1dbffc0adbdd6dede94948c8c0a0a0a0a0a0a0a0a0a0a0a63a0b1
e6f78f375f6b6b6badadadad24242424242424242424247baec8eefc9a4f
73848484e7e7e7e77979797979797979797979bdd6f9ffffc09fbdd6d6d6
948c948c8c7b5f63a79c0a0a0a5e8f9ca7c4e6f77e375f6b6b6badadada5
a593737bbcb524242474a8b5bcd2eefc8b4f73848484e7e7e7e7e7dabdc6
e7e7797979b1d9e7e7f4ffffbc9fbdced6d68c948c8f847b6f63c4c40a5e
a7a7a7c4e6f7f7f76f375f6b6b6badadada8a593817bd2d22474bcbcbcd2
eefcfcfc814f737b8484e7e7e7d9e7dabdc6f4f479b1e7e7e7f4ffffffff
bd9fbdced6ce8c8c8c8c87847287f1f7b1a7a7c4d2f7f7f7f7f75e4a5e63
6b6badada5a59a9c8c9af2fcb9bcbcd2e1fcfcfcfcfc745a737b847be7e7
e7e7d6e7d3d6f7ffd9e7e7f4fbffffffffffb196c6cecece8c8c8c848487
84c4f7f7a7b1c4e6f7f7f7f7f7f74a4a5f636b6ba5a5a5a5a59a9cd2fcfc
bcc8d2eefcfcfcfcfcfc5a60737b7b7be7e7e7e7e7d6e7f4ffffe7f9f4ff
ffffffffffff96adbdcecece8c8c8c84848487e6f7f7e6f1f7f7f7f7f7f7
f7f137375f636b63a5a5a5a5a59c9aeefcfceef2fcfcfcfcfcfcfcf24f4f
737b7b7be7e7e7e7e7e7d6fffffffff7fffffffffffffff79f9fbdcecec6
8c8c8484878494f7f7f7f7f7f7f7f7f7f7f7de8f374a5f636363a5a5a5a5
9a9cadfcfcfcfcfcfcfcfcfcfcfcde9a4f60737b7b7be7e7e7e7d6e7e7ff
ffffffffffffffffffffdec09fadbdc6c6c68484848484878c9c8f837e7e
7e7e6f5e4a4a3737374a5e63635fa5a5a59c9c9aa5b5a8958b8b8b8b8174
605a4f4f4f60737b7b73e7e7e7e7e7d6e7e7d9c2bcbcbcbcbdb1ad969f9f
9fadc6c6c6bd84848487847b7b7b6b504a373737374a374a374a4a506363
5f63a59c9c9a9c9c939384685a4f4f4f4f5a4f604f6060687b7b737be7e7
e7d6e7e7dadaceb8969f9f9f9f969fad9fadadb8c6c6bdbd84848484847b
7b7b6b635e5f5f5050505e505f5f5f5e63635f5f9c9c9c9c9c939493847b
7373736868687468737373737b7b7373e7e7e7e7e7dae7dad6cec6bdbdb8
b8b8b1b8bdbdbdc6bdbdbdbd8487847b7b7b7b7b7372736b6b6b6b636363
63636363635f5f5f9c9a9c939c9493948c8c8484847b7b7b7b7b7b7b7b7b
7b737373e7d6e7dae7e7dae7ded3d6d6d6cececececec6c6c6c6bdbdbdbd
84847b7b7b7b7b7b73737373736b6b6b6b6b6b6363635f5f5f5e9c9c939c
939494938c8c8c8c848484847b7b7b7b7b7b73737374e7e7dae7dae7e7da
e7dededed6d6d6cecececec6c6bdbdbdbdb1
a5a5a5a59c9c9c9c9c9c9c94949494948c8c8c8c8c8c84848487c6c6c6c6
bdbdbdbdbdb5b5b5b5b5adadadadada5a5a5a5a59c9ae7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6a5a5a59c9c9c9c9c9c9c9494
9494948c948c8c8c8f8487848484c6c6c6bdbdbdbdbdb5b5b5b5b5adadad
adada5a5a8a59a9c9c9ce7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
d9e7d6e7e7e7a5a59c9c9c9c9c9c9c9494949494948c8c8c8f848784847b
8784c6c6bdbdbdbdbdb5b5b5b5b5adadadadada5a8a59a9c9c939a9ce7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d9e7d6e7e7dad6e7a59c9c9c9c9c
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7727b7bc6bdbdbdbdb5fcfcfcfc
fcfcfcfcfcfcfcfcfcfcfcfcfc8c939ce7e7e7e7e7e7ffffffffffffffff
ffffffffffffffffffd3dae79c9c9c9c9cf7f7f7d2d2d2d2edf7f7f7f7ed
d2d2e6f70a5e727bbdbdbdbdbdfcfcfce1e1e1e1f8fcfcfcfcf8e1e1eefc
24738c93e7e7e7e7e7fffffffbfbfbfbfffffffffffffbfbffff79c6d3da
9c9c9c9cf7f7f7c4c4c4c4f7f7f7f7f7f7f7edd2f7204a5e6b7bbdbdbdbd
fcfcfcd2d2d2d2fcfcfcfcfcfcfcf8e1fc3460738493e7e7e7e7fffffff4
f4f4f4fffffffffffffffffbff7fadc6d6da9c9c9cf7f7f7c4d2e6d2eded
e6f7f7f7f7f7f7f70a4a4a5e737bbdbdbdfcfcfcd2e1eee1f8f8eefcfcfc
fcfcfcfc246060738c94e7e7e7fffffff4fbfffbffffffffffffffffffff
79adadc6dee79c9c9c4ae69494636b6b63638c8cb1b17b847b6be64a506b
737bbdbdb560eeb5b57b84847b7badadc8c89ca59c84ee6068848c93e7e7
e7adffe7e7cececececee7e7f9f9e7e7e7d6ffadb8d6deda9c9c9c944ad2
946b6b6363637bb1b1c47ba3b18463d250847373b5b5b5b560e1b584847b
7b7b9cc8c8d294b8c8a57be1689c8c8ce7e7e7e7adfbe7cecec6c6cee7f9
f9f4e7f7f9e7cefbb8efdee79c9c9494944ad28c7b726b638484b1b1a384
84847b4ae65e8473b5b5b5b5b560e1ad938c847b9c9cc8c8b89c9c9c9c60
ee739c8ce7e7e7e7e7adfbe7dad3cecee7eff9f9f7efefefe7adffc6efde
9c9494948cf7f7c4b1d2c4d2f7f7f7f7e6ede6e6d2f74a506373b5b5b5b5
adfcfcd2c8e1d2e1fcfcfcfceef8eeeee1fc60687b8ce7e7e7e7e7fffff4
f9fbf4fbfffffffffffffffffbffadb8cee794949494f7f7d2c4c4d2c4e6
f7f7f7edd2e6f7f7f70a4a506b73b5b5b5adfcfce1d2d2e1d2eefcfcfcf8
e1eefcfcfc246068848ce7e7e7e7fffffbf4f4fbf4fffffffffffbffffff
ff79adb8d6de949494f7f7d2d2c4d2d2c4edf7f7f7f7f7f7f7f7204a4a5e
6b72b5b5adfcfce1e1d2e1e1d2f8fcfcfcfcfcfcfcfc346060738484e7e7
e7fffffbfbf4fbfbf4ffffffffffffffffff7fadadc6d6de9494944ae68c
6b6b6b6363636b727b847b727363d24a50636b72adadad60eea58484847b
7b7b848c939c948c8c7be160687b8484e7e7e7adffe7cececececececed3
dae7e7d3decefbadb8ced6de94948c8c4ad287637b846b63636b84847b73
736b5ee64a5e636badadadad60e19a7b949c847b7b84a59c9c948c8473ee
60737b84e7e7e7e7adfbd6cee7efd6c6c6d6e7efe7e7e7d6c6ffadc6ced6
948c948c8c4ae672848e6363636b7b84847b6b6b5037d2205e63adadadad
a560ee8ca5a87b7b7b849c9ca59c8484684fe134737be7e7e7e7e7adffd3
e7f6cec6c6d6e7e7e7e7d6d6b89ffb7fc6ce8c948c8c8cf7f7d2d2d2d2d2
d2f7f7f7f7e6d2edf7f7204a5063adadada5a5fcfce1e1e1e1e1e1fcfcfc
fceee1f8fcfc3460687be7e7e7e7e7fffffbfbfbfbfbfbfffffffffffbff
ffff7fadb8ce8c8c8c8cf7f7ede6e6d2d2d2e6d2edf7f7d2e6f7f70a3750
5e63adada5a5fcfcf8eeeee1e1e1eee1f8fcfce1eefcfc244f68737be7e7
e7e7fffffffffffbfbfbfffbfffffffbffffff799fb8c6ce8c8c8cf7f7f7
f7f7f7f7e6e6d2d2f7f7f7f7f7f7203750506363a5a5a5fcfcfcfcfcfcfc
eeeee1e1fcfcfcfcfcfc344f68687b7be7e7e7fffffffffffffffffffbfb
ffffffffffff7f9fb8b8cec68c8c8c4ae684b1b1b17b7b63636b638e8e8e
8e7be64a4a5e6363a5a5a560ee9cc8c8c894937b7b847ba8a8a8a89cee60
60737b7be7e7e7adffe7f9f9f9e7daceced6cef6f6f6f6e7ffadadc6c6c6
8c8c84844ad2b1a3b1b173636b8e5e8e8e8e8e847be64a505e63a5a5a5a5
60e1c8b8c8c88c7b84a873a8a8a8a89c9cee6068737be7e7e7e7adfbf9f7
f9f9deced6f6c6f6f6f6f6efe7ffadb8c6c6848484847b4ad2b1a3a37b73
5e5e63636b8e8e8e8463e64a505fa5a5a59c9c60e1c8b8b89c8c73737b7b
84a8a8a89c7bee606873e7e7e7e7e7adfbf9f7f7e7dec6c6c6c6d6f6f6f6
efceffadb8bd848484877b734ad2e6e6e6e6e6e6e6e6e6e6e6e6e6e6d2e6
0a50a59c9c9a938c60e1eeeeeeeeeeeeeeeeeeeeeeeeeeeee1ee2468e7e7
e7d6dadeadfbfffffffffffffffffffffffffffffbff79b88484877b8473
634a4a0a240a0a240a0a240a0a240a0a240a244a9c9c9a9c9c8c7b606024
3a24243a24243a24243a24243a243a60e7e7d6e7e7deceadad798e79798e
79798e79798e79798e798ead848484847b7b735e50504a504a4a504a4a4a
4a374a4a4a4a4a4a9c9c9c9c93948c7368686068606068606060604f6060
60606060e7e7e7e7dae7dec6b8b8adb8adadb8adadadad9fadadadadadad
87847b7b7b7b7b736363635e5e5e5e5e5e505050505050504a509a9c939c
9493938c7b7b7b737373737373686868686868686068d6e7dae7e7dadade
cececec6c6c6c6c6c6b8b8b8b8b8b8b8adb8
a5a5a5a59c9c9c9c9c9c9c94949494948c8c8c8c8c8c84848487c6c6c6c6
bdbdbdbdbdb5b5b5b5b5adadadadada5a5a5a5a59c9ae7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6a5a5a5a79c9c9c9c9c9c94d2
f1f1c4a7948c8c8c8c8484848484c6c6c6bcbdbdbdbdb5b5ade1f2f2d2bc
adada5a5a5a5a59c9c9ce7e7e7e7e7e7e7e7e7e7e7fbf7f7f4e7e7e7e7e7
e7e7e7e7e7e7a5a5a787f7f1c4a59c9494948fb1f7f7d2728c8c8c848487
8487c6c6bc9afcf2d2c6b5b5b5b5a8c8fcfce18ca5a5a5a5a59a9c9ae7e7
e7d6fff7f4e7e7e7e7e7d9f9fffffbd3e7e7e7e7e7d6e7d6a59c9c9400f7
f7a3949494948c874a5fe6f7948484848484847bc6bdbdb500fcfcb8adb5
b5adad9a6073eefcada5a59c9c9c9c9ce7e7e7e73bfffff7e7e7e7e7e7d6
adbdffffe7e7e7e7e7e7e7e79cf7a79c9400f7a36b94949494948c4a0050
f7a37b8487847b84bdfcbcbdb500fcb884adadadadb5a55a0068fcb8939c
9a9c939ce7ffe7e7e73bfff7cee7e7e7e7e7e7963bb8fff7dae7d6e7dae7
9c6bf7a5a7f7f74a638c94948c8c8c7b24154ac4507b847b847bbd7bfcc6
bcfcfc607badadadadada5933a1c60d2689c9c939c93e7ceffe7e7ffffad
bde7e7e7e7e7e7da8e58adf4b8e7e7dae7da9c2063f7f7f7b17b157b948c
8c8c8f6b200a00208e63847b7b7bbd347bfcfcfcc8931c9cadadada5a884
34240034a87b9c9c9394e77fc6fffffff9da58e7e7e7e7e7d9ce7f79007f
f6cee7e7dae79c9c00208e846bc4734a9c8c8c8cd2f75000150a6b735f7b
7b7bbdbd0034a89c84d29460b5ada5a5e1fc68001c24848c739c9493e7e7
3b7ff6e7d6f4e7ade7e7e7e7fbffb8005879cedebde7e7da9c9c9c005037
375ef7507b8c8ce6f7a320000a2020c4f7a37b7bb5b5b500684f4f73fc68
93a5a5eefcb83400243434d2fcb8938ce7e7e73bb89f9fc6ffb8dae7e7ff
fff77f3b797f7ff4fff7dae79c9c94947b4a15154af74a87d2f7a3201524
84844a24204a7b73b5b5b5b593601c1c60fc609ae1fcb8341c3a9c9c603a
34608c8ce7e7e7e7daad5858adffadd6fbfff77f588ee7e7ad8e7fade7de
9c9494948f8c8c370a50f7edf7a337002484847b7b204a737373b5b5b5b5
a8adad4f2468fcf8fcb84f003a9c9c9c9434608c8c8ce7e7e7e7d9e7e79f
79b8fffffff79f3b8ee7e7e7e77faddedee794949494948c8c948c20e6f7
b137008484847b7b844a73737373b5b5b5adadadadadad34eefcc84f009c
9c9c93949c608c8c8c8ce7e7e7e7e7e7e7e7e77ffffff99f3be7e7e7dae7
e7addee7dede949494948c8c8c878cedf7d23700248484847b7b7b737b73
7373b5b5adadadadad9aa5f8fce14f003a9c9c9c9493948c948c8c8ce7e7
e7e7e7e7e7d6e7fffffb9f3b8ee7e7e7e7dae7dee7dedede9494948c948c
8c8cf7f7a337005e507b7b7b7b7b737b73737372adadadadadada5a5fcfc
b84f0073689c939493948c948c8c8c84e7e7e7e7e7e7e7e7fffff79f3bc6
b8e7dae7dae7dee7dededede94948c8c8c8c8cf7f78e37150000f74a7b7b
7b737b737373736badadadadada5a5fcfca84f1c0000fc609493948c8c8c
8c8c8484e7e7e7e7e7e7e7fffff69f583b3bffade7dae7dee7dededed6d6
948c948c8c8cf7f784371524200a0af75e7b737b737373736b6badadadad
a5a5fcfc9c4f1c3a342424fc73948c948c8c8c848484e7e7e7e7e7e7ffff
e79f588e7f7979ffc6e7dee7dededed6d6d68c948c8c8cf7f7844a15247b
7b7b154af7637b73737373736b6badadada5a5fcfc9c601c3a9c94931c60
fc7b8c8c8c8c84848484e7e7e7e7e7ffffe7ad588ee7e7da58adffc6e7de
deded6d6d6ce8c8c8c8cf7f7734a0a247b847b7b6b154af750637373736b
6b6badada5a5fcfc8c60243a9c9c9394841c60fc687b8c848484847be7e7
e7e7ffffdead798ee7e7dae7d658adffb8c6ded6d6d6cece8c8c8cf7e65e
370a207b877b7b7b73731537f7ededb1736b6b6ba5a5a5fcee734f24349c
9a949493948c1c4ffcf8f8c884847b7be7e7e7ffffc69f797fe7d6e7e7da
e7e7589ffffffff9d6d6cece8c8cf7e65e370a0a877b7b7b7b7b7373500a
f7730a0a63726b63a5a5fcee734f24249a9c949493948c8c6824fc842424
7b8c7b7be7e7ffffc69f7979d6e7e7e7dae7dee7b879ffd67979c6d3cec6
8cf7d263370a0a877b7b7b7b7b737b737324ed000a63c46b6363a5fce17b
4f24249a9c939493948c8c8c8c3af800247bd2847b7be7fffbce9f7979d6
e7dae7dae7dee7dede8eff3b79cef4d6c6c6846363370a0a877b7b7b7b7b
737b73737337d24a4a7be624635ea57b7b4f24249a9c939493948c8c8c8c
8c4fe1606094ee3a7b73e7c6ce9f7979d6e7dae7dae7dee7dedede9ffbad
ade7ff8ec6c68420240a157b7b7b7b7b7b737b73737373374ad2b1a3500a
5f5fa5343a241c9c9c939493948c8c8c8c8c844f60e1c8b868247373e77f
8e7958e7e7dae7dae7dee7dededed69fadfbf9f7b879bdbd848420157387
7b7b7b7b737b737373736b6b20240a00154a5e5f9c9c341c949a94949394
8c8c8c8c8c848484343a24001c607373e7e77f58e7d6e7e7dae7dee7dede
ded6d6d67f8e793b58adc6bd84877b7b7b7b7b7b7b737b737373736b6b6b
6b505050636b5f5f9c9a9c949c949493948c8c8c8c8c848484847b686868
7b847373e7d6e7e7e7e7e7dae7dee7dededed6d6d6ceceb8b8b8cecebdbd
84847b877b7b7b7b737b737373736b6b6b6b6b6363635f5f5f5e9c9c9c9a
949394948c8c8c8c8c848484847b7b7b7b7b73737374e7e7e7d6e7dae7e7
dee7dededed6d6d6cececec6c6c6bdbdbdb1
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff5d6ebffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdf7fbfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffebaed6ffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffbf007f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff5d6ebffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffdf7fbfffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffebd6c2c2d2f5ffff
ffffd6e1fadbc7c2dbfafffffff5d6ebffffffffffffffffbf7f404070df
ffffffff7f9fef8f50408fefffffffdf7fbfffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffd2aeae
c2c2aeb3e6ffffffaebdbdb3c2bdaebdf0ffffebaed6ffffffffffffff70
000040400010afffffff0030301040300030cfffffbf007fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffff0aebdfafffff0b3b8ffffffaeaebdfaffffe1aec2ffffebaed6ffff
ffffffffcf0030efffffcf1020ffffff000030efffff9f0040ffffbf007f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffebc2e6ffffffffc2aeffffffaeaef5ffffffffccaef0
ffebaed6ffffffffffffbf40afffffffff4000ffffff0000dfffffffff60
00cfffbf007fffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffae6b3aeffffffaeb8ffff
ffffffe1aee6ffebaed6ffffffffffffffffffffffefaf1000ffffff0020
ffffffffff9f00afffbf007fffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffff0ccbdaeaeaeaeaeff
ffffaec2ffffffffffebaed6ffebaed6ffffffffffffffcf603000000000
00ffffff0040ffffffffffbf007fffbf007fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffe6aeaec2
d6e1f0c2aeffffffaec2ffffffffffebaedbffebaed6ffffffffffffaf00
00407f9fcf4000ffffff0040ffffffffffbf008fffbf007fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffbdb3f0ffffffffc2aeffffffaebdffffffffffdbaeebffebaed6ffff
ffffffff3010cfffffffff4000ffffff0030ffffffffff8f00bfffbf007f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffaec2fffffffffab3aeffffffaeaef5ffffffffc2b3ff
ffebaed6ffffffffffff0040ffffffffef1000ffffff0000dfffffffff40
10ffffbf007fffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffbdb3f0fffff5bdaeaeffffffaeaebdfa
ffffe1aeccffffebaed6ffffffffffff3010cfffffdf300000ffffff0000
30efffff9f0060ffffbf007fffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffe6aeb3c2bdaec2d2aebd
f0ffaeb8b3aec2b3aebdfaffffebaed6ffffffffffffaf00104030004070
0030cfff0020100040100030efffffbf007fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffebd2c2
d2e6fffaccc7f5ffaec2f5d2c2c7e1fffffffff5d6ebffffffffffffffbf
704070afffef6050dfff0040df7040509fffffffffdf7fbfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffaec2ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff0040ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffaec2ffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffff0040ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffaec2ffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0040
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffc2d2ffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffff4070ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
a5a5a59c9c9c9c9c94949494948c8c8c8c848484c6c6c6bdbdbdbdb5b5b5
b5adadadada5a5a59c9ce7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
a5a79c9c9c9c9c94949494948c8c8c8c84848784c6bcbdbdbdbdb5b5b5b5
adadadada5a5a5a59a9ce7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6e7
a59c9c9c9c9c94949494948c8c8c8c8c84848487c6bdbdbdbdb5b5b5b5ad
adadada5a5a5a59c9c9ae7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d6
9c9c9c835e4a3737373737374a5e7b848784847bbdbdbd95745a4f4f4f4f
4f4f5a7493a59a9c9c9ce7e7e7c2b1969f9f9f9f9f9f96b1dae7d6e7e7e7
9c8f5e4a848ed2f1f7f1f1e6a37b375f84847b7bbda87460a5a8e1f2fcf2
f2eeb8934f739c9c9394e7d9b1ade7f6fbf7fff7f7fff7da9fbde7e7dae7
9c8372d2e6d287372024508cb1c4c4a3e6e69c7bbd958ce1eee19a4f343a
68a5c8d2d2b8eeeeb593e7c2d3fbfffbd69f7f8eb8e7f9f4f4f7ffffe7da
9c9c5ef14a00000000000000006fedb1244ac47bb5bd74f2600000000000
00000081f8c83a60d28ce7e7b1f7ad3b0000000000003bbdfff98eadf4e7
9c946fa3f78c4a37242437508cd2d2374a72d273b5b581b8fca5604f3a3a
4f68a5e1e14f608ce18ce7e7bdf7ffe7ad9f8e8e9fb8e7fbfb9fadd3fbde
94949437f7f7f7f7f7f7f7f7e6d250727bc4bb73b5b5b54ffcfcfcfcfcfc
fcfceee1688c94d2c68ce7e7e79ffffffffffffffffffffbb8d3e7f4dce7
9494945e8ef7f7f7f7f7f7d2b1d28ee6c4a36b73b5adad74a8fcfcfcfcfc
fce1c8e1a8eed2b8848ce7e7e7b1f6fffffffffffffbf9fbf6fff4f7d6de
949494945ff7f7f7f7f7f7e6d2b17b5037507373adadadad73fcfcfcfcfc
fceee1c894684f688c8ce7e7e7e7bdfffffffffffffffbf9e7b89fb8dede
948c9ca57ba3f7f7f7f7f7f7e6636b7b7b73726badadb5c693b8fcfcfcfc
fcfcee7b7b938c8c8484e7e7e7e7daf7ffffffffffffffc6cedae7deded6
8cc4d2f7e650b1f7f7f7f7e68463f1e6c48f6b6badd2e1fcee68c8fcfcfc
fcee9c7bf2eed2a88484e7f4fbffffb8f9ffffffffffe7cef7fff4d9d6d6
8cd2f7f7f7c4845037374a6b8eedf7f7f1a7736bade1fcfcfcd29c684f4f
6084a8f8fcfcf2bc847be7fbfffffff4e7b89f9fadcef6fffffff7e7d6ce
8c5fc4f1f7f7f7f7f7f7f7f7f7f7f1d2a7635f6ba573d2f2fcfcfcfcfcfc
fcfcfcfcf2e1bc7b737be7bdf4f7fffffffffffffffffffff7fbe7c6bdce
8c63376384b1e6e6f1ede6e6b18e7363244a6363a57b4f7b9cc8eeeef2f8
eeeec8a88c7b3a5a7b7be7bd9fc6e7f9fffff7fffffff9f6dece8e96cec6
84847b634a373737373737373724374a5e6b6363a5a5937b604f4f4f4f4f
4f4f4f3a4f60737b7b7be7e7dac6ad9f9f9f9f9f9f9f9f8e9fadc6cec6c6
848484877b847b7b7373737373726b6b6b635e5fa59c9c9a9c9c93948c8c
8c8c848c84847b7b7373e7e7e7d6e7e7dae7dedededed6d3d6cecec6c6bd
8487847b7b7b7b737b7373736b6b6b6363635f5f9c9a9c9c9493948c8c8c
8c8484847b7b7b7b7373e7d6e7e7e7dae7dee7deded6d6d6cec6c6c6bdbd
84847b7b7b7b7b7b7373736b6b6b6363635f5f5e9c9c9c939494938c8c8c
8484847b7b7b7b737374e7e7e7dae7e7dae7deded6d6cececec6c6bdbdb1

0 11 SF
0 LE neg 20 sub M
(





)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    Table of Contents
)EH(
)0 P(
)BQ(


)UL(
)LI(
)A(Package Tour)EA(
    )UL(
    )LI(
    )A(The Java Language Package)EA(
    )LI(
    )A(The Java I/O Package)EA(
        )UL(
        )LI(
        )A(Input Streams)EA(
        )LI(
        )A(Output Streams)EA(
        )LU(
    )LI(
    )A(The Java Utility Package)EA(

    )LU(
)LU(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Table of Contents)ES()ES()EA(



)0 P(
)HR(

)0 1 H(
     Package Tour
)EH(
)0 P(
)BQ(

One of the most profound benefits of object-oriented programming
is reusability--programmers can save time, effort, and money by
reusing objects created by other programmers.
Typically, to make objects easier to find and use, and to avoid
naming conflicts, programmers
bundle groups of related objects into class libraries. 
In Java, class libraries are called )I(packages)ES(.
)0 P(
Several packages of reusable classes are shipped
as part of the Java development environment.
Many of these packages also include interface and exception definitions.

)0 4 H(
)A(The Java Language Package)EA(
)EH(
)BQ(
This package provides classes that are core to the Java
language. Even though the classes in this packages are
generally useful, if you are writing stand-alone Java
applications, you are likely to need the classes and
interfaces in this package first, and if you are writing
applets, you are likely to need the classes in the Applet
and Abstract Window Toolkit packages first.
)QB(

)0 4 H()A(The Java I/O Package)EA(
)EH(
)BQ(
The Java I/O Package provides a set of input and output
streams used to read and write data to files or other input
and output sources.
)QB(

)0 4 H()A(The Java Utility Package)EA(
)EH(
)BQ(
This Java package contains a collection of utility classes.
Among them are several generic data structures \201Dictionary,
Stack, Vector, Hashtable\202 a useful object for tokenizing a
string and another for manipulating calendar dates.
The java.util package also contains the Observer interface
and Observable class which allow objects to notify one
another when they change.
)QB(

)0 4 H(The Java Networking Package
)EH(
)BQ(
Various networking classes comprise this package including
classes that represent a URL and a URL connection,
classes that implement a socket connection, and a class that
represents an internet address.
)QB(

)0 4 H(The Applet Package)EH(
)BQ(
This package contains the Applet class -- the class that you must
subclass if you're writing an applet. Included in this package
is the AudioClip interaface which provides a very high level
abstraction of audio.
)QB(

)0 4 H(The Abstract Window Toolkit Package
)EH(
)BQ(
This toolkit provides GUI elements used to get input from and display information
to the user such as windows, buttons, scrollbars, and text items.
This packages, also known as the AWT, has two related packages: the
java.awt.image and java.awt.peer packages.
)DL(
)DT(
AWT Image Package
)DD(
The java.awt.image package contains classes and interfaces for
working with images.

)DT(
AWT Peer Package
)DD(
[PENDING]
)LD(
)QB(

)0 4 H(The Java Debugging Package
)EH(
)BQ(
[PENDING]
)QB(

)0 4 H(See Also)EH(
)BQ(
)A()0 4 IM()EA(
)A(Package Index)EA( for the API reference documentation
)QB(
 
)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Table of Contents)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    The Java Language Package
)EH(
)0 P(
)BQ(

The Java language package, a.k.a. java.lang, provides
classes that are core to the Java language. If you are writing
stand-alone Java applications, you are likely to encounter
and use the classes and interfaces in this package first.
The classes in this package are grouped in the following manner:
)DL(

)DT(
)BD(Object)ES(
)DD(
The grand-daddy of all classes--the class from which all others derive.

)DT(
)BD(Data Type Wrappers)ES(
)DD(
A collection of classes used to wrap variables of a
simple data type: Boolean, Character, Double, Float,
Integer and Long. Each of these classes are subclasses
of the abstract class Number.

)DT(
)BD(Strings)ES(
)DD(
Two classes that implement mutable and immutable character data.
)A()I(The String and StringBuffer Classes)ES()EA(
)A()0 5 IM()EA(
is a thorough lesson on the use of both types of strings.

)DT(
)BD(System and Runtime)ES(
)DD(
These two classes provide let your programs use system resources.
System provides a system-independent programming
interface to system resources and Runtime gives you
direct system-specific access to the runtime environment.
)A()I(Using System Resources)ES()EA(
describes both the System and Runtime classes and their methods.

)DT(
)BD(Threads)ES(
)DD(
The Thread, ThreadDeath and ThreadGroup classes implement the
multi-threading capabilities so important to the Java language.
The java.lang package also defines the Runnable interface.
Runnable makes it convenient for Java class to be active
without subclassing the Thread class. Through an example-oriented approach
)A()I(Threads of Control)ES()EA(
)A()0 5 IM()EA(
will teach you about Java threads.

)DT(
)BD(Classes)ES(
)DD(
The Class class provides a runtime description of a class and
the ClassLoader class allows you to load classes into your
program during runtime.

)DT(
)BD(Math)ES(
)DD(
A library of math routines and values such as pi.

)DT(
)BD(Exceptions, Errors and Throwable)ES(
)DD(
When an error occurs in a Java program, the program throws
an object which indicates what the problem was and the state of
the interpreter when the error occurred. Only objects that
derive from the Throwable class can be thrown. There are
two main subclasses of Throwable: Exception and Error. Exceptions
are a form of Throwable that "normal" programs may try to catch.
Errors are used for more catastophic errors--normal programs should
not catch errors. The java.lang package contains the Throwable,
Exception and Error classes, and numerous subclasses of Exception
and Error that represent specific problems.

)DT(
)BD(Processes)ES(
)DD(
Process objects represent the system process that is created
when you use Runtime to execute system commands. The java.lang
packages defines and implements the generic Process class
and two of its subclasses that represent processes on specific
platforms: UNIXProcess and Win32Process.

)LD(

)0 P(
The compiler automatically imports this package for you.
No other packages are automatically imported.

)0 4 H(See Also)EH(
)BQ(
)A()0 4 IM()EA(
)A(java.lang)EA(
)QB(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    The Java I/O Package
)EH(
)0 P(
)BQ(

The Java I/O package, a.k.a. java.io, provides
a set of input streams and a set of output streams
used to read and write data to files or other input
and output sources. There are three categories
of classes in java.io: input streams, output
streams and everything else.
)0 P(
The pages of this lesson provide overviews of Java's I/O
classes. They give information about what each class does
and how you can use them. These pages do not provide any
practical examples or details of each class. For more practical
information regarding reading and writing data using these classes, see
)A()I(Input and Output Streams)ES()EA(
)A()0 5 IM()EA(.

)0 4 H()A(Input Streams)EA(
)EH(
)BQ(
Input streams read data from an input source. An input source
can be a file, a string, or memory--anything that can contain data.
All input streams inherit from InputStream--an abstract class
that defines the programming interface for all input streams.
)0 P(
The InputStream class defines a programming interface for reading
bytes or arrays of bytes, marking locations
in the stream, skipping bytes of input, finding out the
number of bytes that are available for reading, and
resetting the current position within the stream.
An input stream is automatically opened when you create it.
You can explicitly close a stream with the )SM(close\201\202)ES(
method, or let it be closed implicitly when
the object is garbage collected.
)QB(

)0 4 H()A(Output Streams)EA(
)EH(
)BQ(
Output streams write data to an output source. Similar to input
sources, an output source can be anything that can contain data:
a file, a string, or memory.
)0 P(
The OutputStream class is a sibling to InputStream and is
used to write data that can then be read by an input stream.
The OutputStream class defines a programming interface for
writing bytes or arrays of bytes to the stream and flushiing the stream.
Like an input stream, an output stream is
automatically opened when you create it.
You can explicitly close an output stream with the
)SM(close\201\202)ES( method, or let it be closed
implicitly when the object is garbage collected.
)QB(

)0 4 H(Everything Else)EH(
)BQ(
In addition to the streams classes, java.io contains a few
other classes:
)DL(
)DT(
)BD(File)ES(
)DD(
Represents a file on the host system.
)DT(
)BD(RandomAccessFile)ES(
)DD(
Represents a random access file.
)DT(
)BD(StreamTokenizer)ES(
)DD(
Tokenizes the contents of a stream.
)LD(
)QB(

)0 4 H(See Also)EH(
)BQ(
)A()0 4 IM()EA(
)A(java.io)EA(
)QB(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    Input Streams
)EH(
)0 P(
)BQ(

The following diagram shows the class hierarchy for the input
stream classes comprising the java.io package.
InputStream inherits from the Object class; six
classes inherit directly from InputStream; FilterInputStream
is an abstract class with four children.)BR(
)BD(Note:)ES( you can click on any of the class symbols in
the following image to visit the API documentation for that class.
)0 P(

















)0 P(
Each of the InputStreams provided by the java.io package
is intended for a different purpose, either reading from
a different type of input source or reading a specific type
or form of data.

)0 4 H(Simple Input Streams)EH(
)BQ(
To concatenate multiple input streams: use SequenceInputStream.)BR(
To read from a pipe: use PipedInputStream. Typically attached to a PipedOutputStream.)BR(
To read from a file: use FileInputStream.)BR(
To read from a buffer: use ByteArrayStreamBuffer.)BR(
To read from a StringBuffer: use StringBufferInputStream.)BR(
)QB(

)0 4 H(Filter Input Streams)EH(
)BQ(
FilterInputStream is an abstract class that defines
the interface for filtered streams. Filtered streams
have some intelligence built into them
about the data that they are reading. For example,
the DataInputStream class, a subclass of FilterInputStream,
reads a stream of primitive Java data types.
For example, suppose your input source contained
tab delimited data for HotJava merchandise. The
first column contains the price of the item, the
second column contains the shipping weight in ounces,
and the final column contains a description of the
item.
)BQ(
)PR(
19.99   12      HotJava T-shirt   
9.99    8       HotJava Mug
)RP(
)QB(
You would use FilterInputStream's specialized
)SM(read\201\202)ES( methods to read the input data into
Java variables of the correct type.
This code snippet would read a line of the above data:
)BQ(
)PR(
float price;
int weight;
String desc;

price = myDataInputStream.readFloat\201\202;
    myDataInputStream.readChar\201\202;	// throw out the tab
weight = myDataInputStream.readInt\201\202;
    myDataInputStream.readChar\201\202;	// throw out the tab
desc = myDataInputStream.readLine\201\202;
)RP(
)QB(

)0 4 H(How to Use the Filtered Streams)EH(
)BQ(
To read primitive Java data types: use DataInputStream.)BR(
To [PENDING: WHAT?]: use LineNumberInputStream.)BR(
For a more efficient stream that buffers while reading: use BufferedInputStream.)BR(
For a stream with a one-byte pushback buffer: use PushbackInputStream.)BR(
)QB(
)QB(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    Output Streams
)EH(
)0 P(
)BQ(

The following diagram shows the class hierarchy for the output
stream classes provided by the java.io package.
OutputStream inherits from the Object class; four classes
inherit directly from OutputStream; FilterOutputStream is an
abstract class with three direct descendents.)BR(
)BD(Note:)ES( you can click on any of the class symbols
in the following image to visit the API documentation for that class.

)0 P(
















)0 P(
Each of the OutputStreams provided by the java.io package
is intended for a different purpose, either writing to
a different type of output source or writing a specific type
or form of data.

)0 4 H(Simple Output Streams)EH(
)BQ(
To write to a file: use FileOutputStream.)BR(
To write to a pipe: use PipedOutputStream. Typically attached to a PipedInputStream.)BR(
To write to a buffer: use ByteArrayOutput.)BR(
)QB(
 
)0 4 H(Filter Output Streams)EH(
)BQ(
FilterOutputStream is an abstract class that defines
the interface for filtered output streams. Filtered output streams
have some intelligence built into them
about the data that they are writing. You are no doubt already
familiar with one of the descendents of FilterOutputStream: the PrintStream class.
)SM(System.out)ES( and )SM(System.err)ES( are both instances
of PrintStream. PrintStream provides extra methods for
conveniently printing Strings and other data.

)0 4 H(How to Use the Filtered Streams)EH(
)BQ(
To write primitive Java data types: use DataOutputStream.)BR(
For an efficient stream that buffers while writing: use BufferedOutputStream.)BR(
For a stream with convenient printing methods: use PrintStream.)BR(
)QB(
)QB(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL NP(







)A()0 0 IM()EA()A()0 1 IM()EA()A()0 2 IM()EA()A()0 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(



)0 P(
)HR(

)0 2 H(
    The Java Utility Package
)EH(
)0 P(
)BQ(

The final Java package, java.util, contains a collection
of utility classes.

)DL(
)DT(
)BD(Data Structure Classes)ES(
)DD(
A variety of useful classes implementing standard computer
science data structures: including
BitSet, Dictionary, Hashtable, Stack and Vector.
The java.util package also defines the Enumeration interface
which provides a protocol for classes to count through a set of values.

)DT(
)BD(Date)ES(
)DD(
Use the Date class to create and manipulate calendar
dates in a system-independent fashion.

)DT(
)BD(StringTokenizer)ES(
)DD(
This class converts a String of text into its tokens.

)DT(
)BD(Properties)ES(
)DD(
This class implements persistent properties. The properties
table contains key/value pairs where both the key and the value
are Strings. This class is used by the System class to
implement System properties.

)DT(
)BD(Observer and Observable)ES(
)DD(
Classes that implement the Observer interface can "watch"
Observable objects for state changes. When an Observable
object changes it notifies all of its Observers of the
change.

)DT(
)BD(Random-Number Generator)ES(
)DD(
The Random class implements a random-number generator.

)DT(
)BD(Enumeration)ES(
)DD(
The Enumeration interface defines a generic programming
interface for iterating through a set of values.

)LD(

)0 4 H(See Also)EH(
)BQ(
)A()0 4 IM()EA(
)A(java.util)EA(
)QB(

)QB(
)0 P(
)HR(
)0 P(



)A()2 0 IM()EA()A()2 1 IM()EA()A()2 2 IM()EA()A()2 3 IM()EA(


)A()BD()I(Package Tour)ES()ES()EA(





)WB NL showpage end restore
