%!
%%Title: intro.html
%%DocumentFonts: NewCenturySchlbk-Roman NewCenturySchlbk-Bold NewCenturySchlbk-Italic NewCenturySchlbk-BoldItalic Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Creator: html2ps 0.1 beta, written by Jan Karrman, jan@tdb.uu.se
%%EndComments
save
/D {def} def /E {exch} D
/M {moveto} D
/S {show} D
/R {rmoveto} D
/L {lineto} D
/RL {rlineto} D
/SW {stringwidth} D
/GI {getinterval} D
/PI {putinterval} D
/U {gsave CP currentfont /FontInfo get /UnderlinePosition get
 0 E currentfont /FontMatrix get dtransform E pop add newpath M
 dup SW RL stroke grestore S } D
/B {/r E D gsave -10 0 R CP 
  newpath r 0 360 arc closepath fill grestore } D
/OB {/r E D gsave -10 0 R CP 
  newpath r 0 360 arc closepath stroke grestore } D
/NP {PN 0 ne {showpage} if 0.6 setlinewidth 70 756 translate
 F dup scale /BP true D /PN PN 1 add D NO {/OF currentfont D RF findfont
 10 scalefont setfont W 2 div LE neg 40 sub M PN ST cvs S OF setfont} if
 XO SZ SL get neg M} D
/SF {dup SZ SL 3 2 roll put dup -1.2 mul /YI E D E findfont E scalefont
 setfont} D
/FS {CF MK PF {1 or} if and or /CF E D FR SL CF put FL CF get E SF} D
/RF {/NewCenturySchlbk-Roman} D
/BF {/NewCenturySchlbk-Bold} D
/IF {/NewCenturySchlbk-Italic} D
/IB {/NewCenturySchlbk-BoldItalic} D
/FF {/Courier} D
/FB {/Courier-Bold} D
/FI {/Courier-Oblique} D
/FT {/Courier-BoldOblique} D
/FL [RF FF BF FB IF FI IB FT] D
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding D
currentdict end definefont
} D
/ISOLatin1Encoding [
/space/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] D
[RF BF IF IB FF FB FI FT] {reencodeISO D} forall

/WK ( ) D
/BS {/PC E D /TX E D /fin false D /BW WK SW pop D /CW 0 D /LK 0 D /SC 0 D
 /RT TX D {RT WK search {/NW E D pop /RT E D /WH NW SW pop D CW WH add LL gt
 {TX SC LK SC sub GI PC /SC LK D /CW WH BW add D}
 {/CW CW WH add BW add D} ifelse
 /LK LK NW length add 1 add D} {pop exit} ifelse} loop
 /fin true D /LC TX length D /WH RT SW pop D CW WH add LL gt
 {TX SC LK SC sub GI PC NL RT dup () ne {PC} {pop} ifelse}
 {TX SC LC SC sub GI PC} ifelse} D

/W {453 F div} D
/LE {651 F div} D
/BL {HM not {CP E pop XO E M} if} D
/NL {CP /YC E D pop XO YC M YC LE neg gt
 {YI CI sub dup 0 lt BP not and {dup 0 E R CI add /CI E D} {pop} ifelse}
 {NP} ifelse} D
/RS {/TM E D /CN 0 D TM
 {dup 9 eq E 10 eq or {TM CN ( ) PI} if
  /CN CN 1 add D} forall /CN 0 D /BK HM EN and {0} {1} ifelse D TM
 {dup 32 ne {TM CN 3 2 roll put /CN CN 1 add D /BK 0 D}
 {pop BK 0 eq {TM CN 32 put /CN CN 1 add D} if /BK 1 D} ifelse}
  forall TM 0 CN GI dup () ne 
  {dup CN 1 sub get 32 eq {/EN false D} {/EN true D} ifelse} if} D
/join {2 copy length E length add string dup 4 2 roll 2 index 0 3 index
 PI E length E PI} bind D

/CP {currentpoint} D
/WR {dup () eq {pop} {IG {DE search {pop pop} if /IG false D} if
 PB {dup 0 get 10 ne {(\n) E join} if /PB false D} if
 PP {dup 0 get 10 ne {(\n) E join} if /PP false D} if
 (\n) search {TR /CI 0 D /NC 0 D NL pop WR} {TR} ifelse} ifelse} D
/TR {(\t) search {dup length /NC E NC add D SH MS 0 8 NC 8 mod sub dup
 /NC E NC add D GI SH pop TR} {dup length /NC E NC add D SH} ifelse
 /BP false D} D
/SH {CP E pop LE neg lt {NP} if AU AF and UF or {U} {S} ifelse} D
/ON {AR AI NN get 1 add dup AR AI 3 -1 roll put ST cvs length dup ST E (. ) PI
 ST 0 3 -1 roll 2 add GI dup SW pop neg 0 R SH} D
/SP {YI E /YI E D NL /YI E D} D
/BR {BN} D
/BN {PF {WR} {BT NL} ifelse /HM false D} D
/AB {CH E 0 E put CH join WB} D
/NN {dup 0 lt {pop 0} if} D
/HD {IG {DE search {pop pop} if /IG false D} if} D
/DH {pop BT} D
/TL {} D
/LT {pop BT} D
/H  {1 sub /HL E D BN CP E pop LE neg WW add lt {NP} if
 BH SP /SL SL 1 add D HS HL get HT HL get FS} D
/EH {BN AH SP /SL SL 1 sub NN D /CF 0 D SZ SL get FR SL get FS} D
/BT {IG {DE search {pop pop} if /IG false D} if RS dup dup () ne E ( ) ne and
 {/LS LL D /LL W CP pop sub D {/CI 0 D SH /BP false D fin not {NL} if
  /HM true D /LL LS D} BS} {S} ifelse} D
/P  {PF {WR /PP true D} {BN AE not {AH SP} if} ifelse} D
/HR {BN 0 CP E pop M gsave W 0 RL stroke grestore
 /CI 0 D BP {/BP false D} if NL} D
/AD {BN /AE true D AH SP IF 11 SF} D
/DA {BN /AE false D AH SP RF 11 SF} D
/PR {BN /CF 0 D 9 PS mul 1 FS /PF true D /PB true D /NC 0 D} D
/PW {pop PR} D
/RP {dup () ne {dup dup length 1 sub get 10 ne {(\n) join} if} if
 WR AH SP /CF 0 D 11 0 FS /PF false D} D
/SI {/XO AI LG add NN IN mul BC NN BI mul add D /LL W XO sub D} D
/DT {BN /LG LG 1 sub D SI /LG LG 1 add D BL} D
/DD {BN SI BL} D
/DL {BN XO 0 eq {AH SP} if /LG LG 1 add D BL} D
/LD {BN LG 0 gt {/LG LG 1 sub D} if SI XO 0 eq {AH SP} if BL} D
/UL {BT XO 0 eq {AH SP} {NL} ifelse NR AI NN 0 put /UI UI 1 add D
 /AI AI 1 add D SI BL} D
/LU {BT /UI UI 1 sub D /AI AI 1 sub D SI XO 0 eq {AH SP} {NL} ifelse BL} D
/OL {BT XO 0 eq {AH SP} {NL} ifelse NR AI NN 1 put /AI AI 1 add D SI BL} D
/LO {BT AR AI NN 0 put /AI AI 1 sub D SI XO 0 eq {AH SP} {NL} ifelse BL} D
/LI {BN /BP false D /CI 0 D CP E pop LE neg lt {NP} if NR AI 1 sub NN get 1 eq
 {ON} {0 3 R 2.5 UI 2 mod 0 eq {OB} {B} ifelse 0 -3 R} ifelse BL} D
/BQ {BN AH SP /BC BC 1 add D SI BL} D
/QB {BN AH SP /BC BC 1 sub D SI BL} D
/WB {PF {WR} {BT} ifelse} D
/A  {WB /AF true D} D
/EA {WB /AF false D} D
/CM {WB /IG true D /DE (-->) D} D
/SK {PF {(<) join WR} {BT /IG true D /DE (>) D} ifelse} D
/SS {SZ SL get /SL SL 1 add D} D
/I  {WB SS 4 FS} D
/BD {WB SS 2 FS} D
/TT {WB SS 1 FS} D
/KB {WB SS /CF 0 D 3 FS} D
/CT {WB SS /CF 0 D 4 FS} D
/SM {WB SS /CF 0 D 1 FS} D
/ES {WB /SL SL 1 sub NN D /CF 0 D SZ SL get FR SL get FS} D
/UN {WB /UF true D} D
/NU {WB /UF false D} D

/F 1 D
/BH -35 D
/AH -28 D
/LL W D
/XO 0 D
/YI 0 D
/CI 0 D
/LG 0 D
/AI 0 D
/UI 0 D
/IN 30 D
/BI 12 D
/WW 50 D
/PS 1 D
/AR [0 0 0 0 0 0 0 0 0 0] D
/NR [0 0 0 0 0 0 0 0 0 0] D
/FR [0 0 0 0 0 0 0 0 0 0] D
/SZ [0 0 0 0 0 0 0 0 0 0] D
/HS [19 17 15 13 12 11] D
/HT [2 2 2 2 2 2] D
/SL 0 D
/CF 0 D
/BC 0 D
/MK 7 D
/PN 0 D
/MS (        ) D
/CH 1 string D
/ST 6 string D
/IG false D
/HM false D
/PF false D
/EN false D
/UF false D
/PP false D
/AE false D
/AF false D
/NO false D
/AU true D
/BP true D
%%EndProlog
save
RF 11 SF
0 LE neg 20 sub M
(


)HD(
)TL(This is a Draft!)LT(
)DH(



)CM(    HEADER    -->
)1 H(
This is a Draft!
)EH(

)SK(hr size=4>
)P(

)CM(    WELCOMING PARAGRAPH    -->
)BD(The Java Language Tutorial)ES(
is a practical, on-line guide to writing programs in the Java language.
)BR(
)BD(
Note:
)ES(
This document reflects the Java Developer's Kit \(Version 1.0 Beta\) release.
)HR(
)P(

)3 H(Disclaimer!)EH(
)BQ(
This guide is a )BD(DRAFT)ES(.
It's incomplete, buggy, and contains links to "ghost" lessons
\(lessons that we are working on and that aren't yet available\).
We're making this guide available to you for two reasons:
)OL(
)LI( So you can learn from it --
     some of the information in this guide
     is not documented anywhere else.
)LI( So we can get feedback on this guide.
)LO(

To help us with #2, please let us know what's confusing in these lessons,
what seems unnecessary,
and whether the lessons helped you at all.
Write us at 
)A(java@java.sun.com)EA(
or submit a
)A(bug report)EA(.
)QB(

)3 H(Where is it?)EH(
)BQ(
The )A(Trail Map)EA( describes
the trails and lessons that are currently available.
)QB(

)3 H(
What's
 new )WB(
in this Draft?
)EH(
)BQ(

)4 H(Upgrades, Bug Fixes, and Face-Lifts. Oh My!)EH(

For the third draft, we've:
)UL(
)LI(
made the few changes necessary to reflect Beta instead of Pre-Beta.
)LI(
changed the name of this document from
"The Java Programmer's Guide" to
"The Java Language Tutorial: Object-Oriented Programming for the Internet."
Why the long name?
This document is going to be published as a book,
and we wanted to make sure the title
was as descriptive as possible,
without requiring much prior knowledge of the potential buyer.
)LI(
added ALT text to our link graphics, 
so that people using non-graphical browsers
can understand the information the graphic was conveying.
)LU(

)P(
Here are the changes that occurred between the second and first drafts:
)UL(
)LI(
Everything was updated to reflect the new APIs \(except for )I(The "run:"
Protocol Handler)ES( and )I(The "text/plain" Content Handler)ES(
in the )A(Getting Started)EA(
)A( [IMAGE] )WB()EA(
trail\).
)LI(
We fixed many typos, clarified many obfuscations, fixed
broken links and miscommunications.
)LI(
We got a face-lift with new icons and a new page design.
)LU(

)4 H(New Trails and New Lessons)EH(

We've added a few pages to the third draft: 
)DL(
)DT(
)A( [IMAGE] )WB()EA(
)DD(
The )A(Creating a User Interface)EA(
trail has a new lessons:
)A(Using Layout Managers)EA(, which [ . . . ].
)LD(

The second draft has the following additions to the first draft:
)DL(
)DT(
)A( [IMAGE] )WB()EA(
)DD(
The )A(Writing Applets)EA(
trail has a new lesson:
)A(The Anatomy of an Applet)EA(
which describes
how applets work and how you use the Applet class to create an applet.

)DT(
)A( [IMAGE] )WB()EA(
)DD(
The new )A(Creating a User Interface)EA(
trail has two new lessons:
)A(Overview of UI Elements)EA( which
introduces you to the objects that the Java development environment
provides for building UIs, and 
)A(Anatomy of a Program with a Graphical UI)EA(
which explains the Component hierarchy and how it relates to event handling and
drawing.

)DT(
)A( [IMAGE] )WB()EA(
)DD(
We've added a trail )A(The Java Development Environment)EA(
that provides a tour of the packages provided with the development environment,
talks about the different tools including the new prototype debugger. This trail
includes a lesson on )A(Using System Resources)EA(.

)DT(
)A( [IMAGE] )WB()EA(
)DD(
We've also added the
)A(Integrating Native Methods into Java Programs)EA(
trail that shows you how to integrate native methods
into your Java programs. Currently, this trail contains two lessons.
The first, )A(Step By Step)EA(,
 walks you through an example showing you each step you take to
implement a native method. The second, 
)A(A Comprehensive Example)EA(,
which is largely unfinished, is an example that implements a
"character-replacement" program using native methods.

)DT(
)A( [IMAGE] )WB()EA(
)DD(
And finally, two new lessons have been added to the
)A(Writing Java Programs)EA(
trail:
)A(Threads of Control)EA(
and
)A(Object-Oriented Programming Concepts: A Primer)EA(.
)LD(
)QB(

)3 H(About the Applet References in the Document)EH(
)BQ(
Applet references in these pages actually contain references to two
different versions of the applet:
)UL(
)LI(
a 1.0alpha3 compatible version
which you can view these using the 1.0alpha3 version of the HotJava browser
)LI(
a Beta-compatible version which you can view these
using the appletviewer or other Beta-compatible browser
)LU(
)BR(

)BD(
Note to 1.0alpha3 Developers:
)ES(
This programmer's guide doesn't contain any information on how to
upgrade your 1.0alpha3 Java applets to the 1.0 Beta release.
For more information on how to do this please refer to
)A(Converting Applets)EA(.
)QB(

)3 H(Downloading the Programmer's Guide)EH(
)BQ(
You can download the Programmer's Guide in the following formats.
)DL(

)DT(
)A(ftp://java.sun.com/docs/progGuide.html.tar.Z)EA(
)DD(
HTML files in compressed tar format for UNIX machines.)BR(
Approximate size when compressed: 720K )BR(
Approximate size when uncompressed: 1,415K )BR(

)DT(
)A(ftp://java.sun.com/docs/progGuide.ps.tar.Z)EA(
)DD(
PostScript files in compressed tar format for UNIX machines.)BR(
Approximate size when compressed: 503K )BR(
Approximate size when uncompressed: 1,780K )BR(
)BD(Note:)ES( There is one PostScript file for every HTML file in
the programmer's guide \(which is a lot\). Also, in the PostScript files images
are replaced with their alternate text, or if no alternate text is specified,
with "[IMAGE]".

)DT(
)A(ftp://java.sun.com/docs/progGuide.html.zip)EA(
)DD(
HTML files in zip format for DOS machines.)BR(
Approximate size when compressed: 644K )BR(
Approximate size when uncompressed: 1,415K )BR(

)DT(
)A(ftp://java.sun.com/docs/progGuide.ps.zip)EA(
)DD(
PostScript files in zip format for DOS machines.)BR(
Approximate size when compressed: 680K )BR(
Approximate size when uncompressed: 1,780K )BR(
)BD(Note:)ES( There is one PostScript file for every HTML file in
the programmer's guide \(which is a lot\). Also, in the PostScript files images
are replaced with their alternate text, or if no alternate text is specified,
with "[IMAGE]".

)LD(
)QB(



)WB showpage restore
